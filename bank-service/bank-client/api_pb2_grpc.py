# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import api_pb2 as api__pb2


class ClerkBankServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateAccount = channel.unary_unary(
                '/bank.ClerkBankService/CreateAccount',
                request_serializer=api__pb2.CreateAccountRequest.SerializeToString,
                response_deserializer=api__pb2.CreateAccountResponse.FromString,
                )
        self.DoTransaction = channel.unary_unary(
                '/bank.ClerkBankService/DoTransaction',
                request_serializer=api__pb2.TransactionRequest.SerializeToString,
                response_deserializer=api__pb2.TransactionResponse.FromString,
                )


class ClerkBankServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DoTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClerkBankServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAccount,
                    request_deserializer=api__pb2.CreateAccountRequest.FromString,
                    response_serializer=api__pb2.CreateAccountResponse.SerializeToString,
            ),
            'DoTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.DoTransaction,
                    request_deserializer=api__pb2.TransactionRequest.FromString,
                    response_serializer=api__pb2.TransactionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bank.ClerkBankService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ClerkBankService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bank.ClerkBankService/CreateAccount',
            api__pb2.CreateAccountRequest.SerializeToString,
            api__pb2.CreateAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DoTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bank.ClerkBankService/DoTransaction',
            api__pb2.TransactionRequest.SerializeToString,
            api__pb2.TransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ClientBankServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Transfer = channel.unary_unary(
                '/bank.ClientBankService/Transfer',
                request_serializer=api__pb2.TransferRequest.SerializeToString,
                response_deserializer=api__pb2.TransactionResponse.FromString,
                )
        self.Statement = channel.unary_unary(
                '/bank.ClientBankService/Statement',
                request_serializer=api__pb2.BankStatementRequest.SerializeToString,
                response_deserializer=api__pb2.BankStatementResponse.FromString,
                )


class ClientBankServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Transfer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Statement(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClientBankServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Transfer': grpc.unary_unary_rpc_method_handler(
                    servicer.Transfer,
                    request_deserializer=api__pb2.TransferRequest.FromString,
                    response_serializer=api__pb2.TransactionResponse.SerializeToString,
            ),
            'Statement': grpc.unary_unary_rpc_method_handler(
                    servicer.Statement,
                    request_deserializer=api__pb2.BankStatementRequest.FromString,
                    response_serializer=api__pb2.BankStatementResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bank.ClientBankService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ClientBankService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Transfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bank.ClientBankService/Transfer',
            api__pb2.TransferRequest.SerializeToString,
            api__pb2.TransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Statement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bank.ClientBankService/Statement',
            api__pb2.BankStatementRequest.SerializeToString,
            api__pb2.BankStatementResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
